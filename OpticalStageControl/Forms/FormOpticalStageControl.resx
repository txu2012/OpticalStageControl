<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>